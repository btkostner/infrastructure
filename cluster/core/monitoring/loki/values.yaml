global:
  extraEnv: &globalExtraEnv
    - name: BUCKET_HOST
      valueFrom:
        configMapKeyRef:
          name: loki-chunks
          key: BUCKET_HOST
    - name: BUCKET_PORT
      valueFrom:
        configMapKeyRef:
          name: loki-chunks
          key: BUCKET_PORT
    - name: CHUNKS_BUCKET_NAME
      valueFrom:
        configMapKeyRef:
          name: loki-chunks
          key: BUCKET_NAME
    - name: CHUNKS_AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: loki-chunks
          key: AWS_ACCESS_KEY_ID
    - name: CHUNKS_AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: loki-chunks
          key: AWS_SECRET_ACCESS_KEY
    - name: RULER_BUCKET_NAME
      valueFrom:
        configMapKeyRef:
          name: loki-ruler
          key: BUCKET_NAME
    - name: RULER_AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: loki-ruler
          key: AWS_ACCESS_KEY_ID
    - name: RULER_AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: loki-ruler
          key: AWS_SECRET_ACCESS_KEY

backend:
  replicas: 0

bloomCompactor:
  replicas: 0

bloomGateway:
  replicas: 0

compactor:
  replicas: 2
  maxUnavailable: 1
  extraArgs: ["-config.expand-env=true"]
  extraEnv: *globalExtraEnv

deploymentMode: Distributed

distributor:
  replicas: 2
  maxUnavailable: 1
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  extraArgs: ["-config.expand-env=true"]
  extraEnv: *globalExtraEnv

gateway:
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: []
  enabled: true
  replicas: 2
  resources:
    limits:
      cpu: 1.4
      memory: 731Mi

indexGateway:
  replicas: 2
  maxUnavailable: 1
  extraArgs: ["-config.expand-env=true"]
  extraEnv: *globalExtraEnv

ingester:
  replicas: 2
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  extraArgs: ["-config.expand-env=true"]
  extraEnv: *globalExtraEnv
  zoneAwareReplication:
    enabled: false

loki:
  # This is a copy of the default config value, but
  # allows unique creds for each S3 bucket.
  config: |
    auth_enabled: false
    chunk_store_config:
      chunk_cache_config:
        background:
          writeback_buffer: 500000
          writeback_goroutines: 1
          writeback_size_limit: 500MB
        default_validity: 0s
        memcached:
          batch_size: 4
          parallelism: 5
        memcached_client:
          addresses: dnssrvnoa+_memcached-client._tcp.loki-chunks-cache.monitoring.svc
          consistent_hash: true
          max_idle_conns: 72
          timeout: 2000ms
    common:
      compactor_address: 'http://loki-compactor:3100'
      path_prefix: /var/loki
      replication_factor: 1
      storage:
        s3:
          access_key_id: ${CHUNKS_AWS_ACCESS_KEY_ID}
          bucketnames: ${CHUNKS_BUCKET_NAME}
          endpoint: ${BUCKET_HOST}:${BUCKET_PORT}
          insecure: true
          s3forcepathstyle: true
          secret_access_key: ${CHUNKS_AWS_SECRET_ACCESS_KEY}
    frontend:
      scheduler_address: loki-query-scheduler.monitoring.svc.cluster.local:9095
      tail_proxy_url: http://loki-querier.monitoring.svc.cluster.local:3100
    frontend_worker:
      scheduler_address: loki-query-scheduler.monitoring.svc.cluster.local:9095
    index_gateway:
      mode: simple
    ingester:
      chunk_encoding: snappy
    limits_config:
      max_cache_freshness_per_query: 10m
      query_timeout: 300s
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      split_queries_by_interval: 15m
      volume_enabled: true
    memberlist:
      join_members:
      - loki-memberlist
    pattern_ingester:
      enabled: false
    querier:
      max_concurrent: 4
    query_range:
      align_queries_with_step: true
      cache_results: true
      results_cache:
        cache:
          background:
            writeback_buffer: 500000
            writeback_goroutines: 1
            writeback_size_limit: 500MB
          default_validity: 12h
          memcached_client:
            addresses: dnssrvnoa+_memcached-client._tcp.loki-results-cache.monitoring.svc
            consistent_hash: true
            timeout: 500ms
            update_interval: 1m
    ruler:
      storage:
        s3:
          access_key_id: ${RULER_AWS_ACCESS_KEY_ID}
          bucketnames: ${RULER_BUCKET_NAME}
          endpoint: ${BUCKET_HOST}:${BUCKET_PORT}
          insecure: true
          s3forcepathstyle: true
          secret_access_key: ${RULER_AWS_SECRET_ACCESS_KEY}
        type: s3
    runtime_config:
      file: /etc/loki/runtime-config/runtime-config.yaml
    schema_config:
      configs:
      - from: "2024-04-01"
        index:
          period: 24h
          prefix: loki_index_
        object_store: s3
        schema: v13
        store: tsdb
    server:
      grpc_listen_port: 9095
      http_listen_port: 3100
      http_server_read_timeout: 600s
      http_server_write_timeout: 600s
    storage_config:
      boltdb_shipper:
        index_gateway_client:
          server_address: dns+loki-index-gateway-headless.monitoring.svc.cluster.local:9095
      hedging:
        at: 250ms
        max_per_second: 20
        up_to: 3
      tsdb_shipper:
        index_gateway_client:
          server_address: dns+loki-index-gateway-headless.monitoring.svc.cluster.local:9095
    tracing:
      enabled: true
  # All of these values are to just fix helm
  # requirements, they are overwritten set above
  schemaConfig:
    configs:
      - from: 2024-04-01
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  ingester:
    chunk_encoding: snappy
  tracing:
    enabled: true
  querier:
    max_concurrent: 4

minio:
  enabled: false

querier:
  replicas: 2
  maxUnavailable: 1
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  zoneAwareReplication:
    enabled: false
  extraArgs: ["-config.expand-env=true"]
  extraEnv: *globalExtraEnv

queryFrontend:
  replicas: 2
  maxUnavailable: 1
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 4
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  extraArgs: ["-config.expand-env=true"]
  extraEnv: *globalExtraEnv

queryScheduler:
  replicas: 2
  maxUnavailable: 1
  extraArgs: ["-config.expand-env=true"]
  extraEnv: *globalExtraEnv

read:
  replicas: 0

rollout_operator:
  enabled: false

ruler:
  enabled: true
  replicas: 2
  maxUnavailable: 1
  extraArgs: ["-config.expand-env=true"]
  extraEnv: *globalExtraEnv

singleBinary:
  replicas: 0

write:
  replicas: 0
